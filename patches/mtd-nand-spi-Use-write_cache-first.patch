From c288f81ff5a0bcbc560d47fc4ce8e4447e3263c4 Mon Sep 17 00:00:00 2001
From: Sky Huang <skylake.huang@mediatek.com>
Date: Mon, 19 Nov 2024 10:39:34 +0100
Subject: [PATCH] mtd: nand: spi: Use write_cache first and then update_cache
 in write operation
 https://patchwork.ozlabs.org/project/linux-mtd/patch/20241119093949.3014-1-SkyLake.Huang@mediatek.com/

---
 ...spi-nand-use-cache-first-in-write-op.patch | 31 +++++++++++++++++++
 1 file changed, 31 insertions(+)
 create mode 100644 target/linux/mediatek/patches-6.6/437-spi-nand-use-cache-first-in-write-op.patch

diff --git a/target/linux/mediatek/patches-6.6/437-spi-nand-use-cache-first-in-write-op.patch b/target/linux/mediatek/patches-6.6/437-spi-nand-use-cache-first-in-write-op.patch
new file mode 100644
index 0000000000..5d20904b44
--- /dev/null
+++ b/target/linux/mediatek/patches-6.6/437-spi-nand-use-cache-first-in-write-op.patch
@@ -0,0 +1,31 @@
+--- a/drivers/mtd/nand/spi/core.c
++++ b/drivers/mtd/nand/spi/core.c
+@@ -472,7 +472,10 @@ static int spinand_write_to_cache_op(str
+ 		nbytes -= ret;
+ 		column += ret;
+ 		buf += ret;
++
++		wdesc->info.op_tmpl = *spinand->op_templates.update_cache;
+ 	}
++	wdesc->info.op_tmpl = *spinand->op_templates.write_cache;
+ 
+ 	return 0;
+ }
+@@ -866,7 +869,7 @@ static int spinand_create_dirmap(struct
+ 	/* The plane number is passed in MSB just above the column address */
+ 	info.offset = plane << fls(nand->memorg.pagesize);
+ 
+-	info.op_tmpl = *spinand->op_templates.update_cache;
++	info.op_tmpl = *spinand->op_templates.write_cache;
+ 	desc = devm_spi_mem_dirmap_create(&spinand->spimem->spi->dev,
+ 					  spinand->spimem, &info);
+ 	if (IS_ERR(desc))
+@@ -889,7 +892,7 @@ static int spinand_create_dirmap(struct
+ 		return 0;
+ 	}
+ 
+-	info.op_tmpl = *spinand->op_templates.update_cache;
++	info.op_tmpl = *spinand->op_templates.write_cache;
+ 	info.op_tmpl.data.ecc = true;
+ 	desc = devm_spi_mem_dirmap_create(&spinand->spimem->spi->dev,
+ 					  spinand->spimem, &info);
-- 
2.47.1

